ideas, problems, misc:

problem: trace sometimes snaps to intersection when pressing against outer border
problem: line can pass through outer border
problem: trace body not quite on the right place
problem: current maze configuration and resolution seems to be not putting the bottom border in the right place
still a problem with going down then back up again for line drawing, took video on phone
 - seems to be something about the code on the raspberry pi? weird

idea: have a fifth type of nullzone, "full" that adds nullzones in all four directions
 - to make rounded maze corners, add rounded edges on default corners and any points adjacent to full nullzones if the nullzone is on edge of maze
idea: to test if line on a finish point, check if either gridpos is further than maze size


elif self.ysquarestravelled.is_integer(): - this line in Trace.update() can perhaps just be else:, test this

To Do:
add nullzone for trace start once line goes over another intersection
add nullzones for line body in trymove()
add maze border nullzones
draw circles at trace body joints and fix trace body positioning

further down the line:
check if variables need to be self.var or just var
solution checking: [SPOILERS FOR THE WITNESS PUZZLE MECHANICS BELOW]
 - hexagons can be checked simply by analyzing trace path upon finishing
use left/right of line algorithm to separate grid into groups, for all white/black squares check if any of other color in group
for tetrominoes analyze the group the tetromino is in
"learning mode" aka wrong elements flash when wrong?
make intersection snapping moving to intersection instead of snapping
 - maybe intersection checking needs to happen first in update() to prevent oscillation like last time I tried this