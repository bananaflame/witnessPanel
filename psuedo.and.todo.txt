ideas, problems, misc:

problem: moving by some fraction of diffx or diffy means that when moving hard diagonal, it's easy to miss intersections and just go in line instead of staircase
play with values of that fraction and the distance the cursor has to be from center of line head for it to move, might be able to be more precise with larger denom on fraction

To Do:
draw the squares in the grid based on maze data, check if the line width between them is pixel constant for the line head, might need tweaking
try to implement move towards intersection when primary direction is towards other thing

convert maze data to wall surfaces, scale for resolution and variable grid sizes
add start and finish functionality to maze data
add intersection sprites for collisions at maze intersections, as well as hexagon sprites (wait, maybe just hexagon sprites?)
draw line body based on occupied intersections, and stretch active dimension of a "current" rectangle surface as line head moves

further down the line:
solution checking: [SPOILERS FOR THE WITNESS PUZZLE MECHANICS BELOW]
 - hexagon sprites all collide with line segments
use left/right of line algorithm to separate grid into groups, for all white/black squares check if any of other color in group
for tetrominoes analyze the group the tetromino is in
"learning mode" aka wrong elements flash when wrong?